#ifndef MOENJIN_AST_NODETYPE_H
#define MOENJIN_AST_NODETYPE_H

namespace MoEnjin
{
	enum NodeType
	{
		NODE_UNKNOWN = -1,
		NODE_NULL,
		NODE_BOOLEAN,
		NODE_NUMBER,
		NODE_STRING,
		NODE_REGEX,
		NODE_THIS,
		NODE_RESOLVE,
		NODE_ARRAY,
		NODE_PROPERTY_LIST,
		NODE_OBJECT_LITERAL,
		NODE_BRACKET_ACCESSOR,
		NODE_DOT_ACCESSOR,
		NODE_ARGUMENT_LIST,
		NODE_NEW,
		NODE_FUNC_CALL_VALUE,
		NODE_FUNC_CALL_RESOLVE,
		NODE_FUNC_CALL_BRACKET,
		NODE_FUNC_CALL_DOT,
		NODE_FUNC_CALL_EVAL,
		NODE_FUNCTION_CALL,
		NODE_FUNCTION_APPLY,
		NODE_PREPOST_RESOLVE,
		NODE_POSTFIX_RESOLVE,
		NODE_POSTFIX_BRACKET,
		NODE_POSTFIX_DOT,
		NODE_POSTFIX_ERROR,
		NODE_DELETE_RESOLVE,
		NODE_DELETE_BRACKET,
		NODE_DELETE_DOT,
		NODE_DELETE_VALUE,
		NODE_VOID,
		NODE_TYPEOF_RESOLVE,
		NODE_TYPEOF_VALUE,
		NODE_PREFIX_RESOLVE,
		NODE_PREFIX_BRACKET,
		NODE_PREFIX_DOT,
		NODE_PREFIX_ERROR,
		NODE_UNARY_OP,
		NODE_UNARY_PLUS,
		NODE_NEGATE,
		NODE_BITWISE_NOT,
		NODE_LOGICAL_NOT,
		NODE_BINARY_OP,
		NODE_MULTIPLY,
		NODE_DIVIDE,
		NODE_MODULUS,
		NODE_ADD,
		NODE_SUBTRACT,
		NODE_LEFT_SHIFT,
		NODE_RIGHT_SHIFT,
		NODE_RIGHT_SHIFT_UNSIGNED,
		NODE_LESS,
		NODE_LESS_EQ,
		NODE_GREATER,
		NODE_GREATER_EQ,
		NODE_INSTANCEOF,
		NODE_IN,
		NODE_EQUAL,
		NODE_EQUAL_STRICT,
		NODE_NOT_EQUAL,
		NODE_NOT_EQUAL_STRICT,
		NODE_BIT_AND,
		NODE_BIT_OR,
		NODE_BIT_XOR,
		NODE_LOGICAL_OP,
		NODE_CONDITIONAL,
		NODE_READ_MODIFY_RESOLVE,
		NODE_READ_MODIFY_BRACKET,
		NODE_READ_MODIFY_DOT,
		NODE_ASSIGN_RESOLVE,
		NODE_ASSIGN_BRACKET,
		NODE_ASSIGN_DOT,
		NODE_ASSIGN_ERROR,
		NODE_COMMA,
		NODE_CONST_DECL,
		NODE_CONST_STATEMENT,
		NODE_BLOCK,
		NODE_EMPTY,
		NODE_DEBUGGER,
		NODE_EXPR_STATEMENT,
		NODE_VAR,
		NODE_IF,
		NODE_IF_ELSE,
		NODE_DO_WHILE,
		NODE_WHILE,
		NODE_FOR,
		NODE_FOR_IN,
		NODE_CONTINUE,
		NODE_BREAK,
		NODE_RETURN,
		NODE_WITH,
		NODE_LABEL,
		NODE_THROW,
		NODE_TRY,
		NODE_SCOPE,
		NODE_PROGRAM,
		NODE_EVAL,
		NODE_FUNCTION,
		NODE_FUNCTION_EXPR,
		NODE_FUNCTION_DECL,
		NODE_SWITCH
	};
}

#endif